# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.05, .1, .15, .2, .3,.4,.5, .6, .7, .8, .9),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".05", ".1", ".15", ".2", ".3", ".4", ".5", ".6", ".7", ".8", ".9"))
# # This next method reduces the independence between team and pitstop_duration, but will not be compatible with different BAHs - labelling needed, easier to interpret with quantiles
# # Alternatively try to make bins with equal number of observations
# BAH$pitstop_duration <- cut_number(BAH$pitstop_duration, 10, ordered = TRUE)
# # The following does not work because creating equal width intervals causes some bins to have no observations
# BAH$pitstop_duration <- cut_interval(as.numeric(BAH$pitstop_duration), 10, ordered = TRUE)
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
# ggplot() + geom_bar(aes(x = BAH$pitstop_duration))
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.05, .1, .15, .2, .25, .3,.4,.5,.6, .7,.8, .85, .87, .9, .92, .94, .96, .98, .99),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE, labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98", ".99"))
# OLD PITSTOP BINNNING
# Pitstop duration bin and fill NAs with a [0,0] bin
# # Convert pitstop_duration to numeric
# BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# # Make bins
# BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.05, .1, .15, .2, .3,.4,.5, .75),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE)
# Fill NAs with 0,1 bins
# BAH$pitstop_duration <- factor(BAH$pitstop_duration, ordered = TRUE)
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
# BAH$pitstop_duration <- factor(BAH$pitstop_duration, ordered = TRUE)
BAH$tyre <- factor(BAH$tyre) # TODO ordering
# Weather can be ordered too, with Dry being the preferred
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered, quite self-explanatory reason
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# check which rows have NAs and why
which(is.na(BAH))
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
View(BAH)
BAH$pitstop_duration <- shift(BAH$pitstop_duration, n=1, type="lag")
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.05, .1, .15, .2, .3,.4,.5, .6, .7, .8, .9),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".05", ".1", ".15", ".2", ".3", ".4", ".5", ".6", ".7", ".8", ".9"))
# # This next method reduces the independence between team and pitstop_duration, but will not be compatible with different BAHs - labelling needed, easier to interpret with quantiles
# # Alternatively try to make bins with equal number of observations
# BAH$pitstop_duration <- cut_number(BAH$pitstop_duration, 10, ordered = TRUE)
# # The following does not work because creating equal width intervals causes some bins to have no observations
# BAH$pitstop_duration <- cut_interval(as.numeric(BAH$pitstop_duration), 10, ordered = TRUE)
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
ggplot() + geom_bar(aes(x = BAH$lap_time))
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.05, .1, .15, .2, .25, .3,.4,.5,.6, .7,.8, .85, .87, .9, .92, .94, .96, .98, .99),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE, labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98", ".99"))
# OLD PITSTOP BINNNING
# Pitstop duration bin and fill NAs with a [0,0] bin
# # Convert pitstop_duration to numeric
# BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# # Make bins
# BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.05, .1, .15, .2, .3,.4,.5, .75),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE)
# Fill NAs with 0,1 bins
# BAH$pitstop_duration <- factor(BAH$pitstop_duration, ordered = TRUE)
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
# BAH$pitstop_duration <- factor(BAH$pitstop_duration, ordered = TRUE)
BAH$tyre <- factor(BAH$tyre) # TODO ordering
# Weather can be ordered too, with Dry being the preferred
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered, quite self-explanatory reason
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c( .1, .2, .3, .4, .5, .6, .75),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".1", ".2", ".3", ".4", ".5", ".6", ".75"))
# # This next method reduces the independence between team and pitstop_duration, but will not be compatible with different BAHs - labelling needed, easier to interpret with quantiles
# # Alternatively try to make bins with equal number of observations
# BAH$pitstop_duration <- cut_number(BAH$pitstop_duration, 10, ordered = TRUE)
# # The following does not work because creating equal width intervals causes some bins to have no observations
# BAH$pitstop_duration <- cut_interval(as.numeric(BAH$pitstop_duration), 10, ordered = TRUE)
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.05, .1, .15, .2, .25, .3,.4,.5,.6, .7,.8, .85, .87, .9, .92, .94, .96, .98),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE, labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98"))
# OLD PITSTOP BINNNING
# Pitstop duration bin and fill NAs with a [0,0] bin
# # Convert pitstop_duration to numeric
# BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# # Make bins
# BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.05, .1, .15, .2, .3,.4,.5, .75),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE)
# Fill NAs with 0,1 bins
# BAH$pitstop_duration <- factor(BAH$pitstop_duration, ordered = TRUE)
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
# BAH$pitstop_duration <- factor(BAH$pitstop_duration, ordered = TRUE)
BAH$tyre <- factor(BAH$tyre) # TODO ordering
# Weather can be ordered too, with Dry being the preferred
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered, quite self-explanatory reason
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# check which rows have NAs and why
which(is.na(BAH))
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.2, .4,  .6, .8),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".2", ".4", ".6", ".8"))
# # This next method reduces the independence between team and pitstop_duration, but will not be compatible with different BAHs - labelling needed, easier to interpret with quantiles
# # Alternatively try to make bins with equal number of observations
# BAH$pitstop_duration <- cut_number(BAH$pitstop_duration, 10, ordered = TRUE)
# # The following does not work because creating equal width intervals causes some bins to have no observations
# BAH$pitstop_duration <- cut_interval(as.numeric(BAH$pitstop_duration), 10, ordered = TRUE)
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.05, .1, .15, .2, .25, .3,.4,.5,.6, .7,.8, .85, .87, .9, .92, .94, .96, .98),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE, labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98"))
# Pitstop duration bin and fill NAs with a [0,1] bin
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
BAH$tyre <- factor(BAH$tyre)
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# check which rows have NAs and why
which(is.na(BAH))
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
ggplot() +
geom_density(aes(x = BAH$pitstop_duration), fill="#e660bb", color="#dc5bb2") +
labs(x = "Pitstop Duration", y = "Density", title = "Density Plot of Pitstop Duration at Bahrain GP 2023") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_density(aes(x = BAH$pitstop_duration), fill="#ec8ccd", color="#ec8ccd") +
labs(x = "Pitstop Duration", y = "Density", title = "Density Plot of Pitstop Duration at Bahrain GP 2023") +
theme(plot.title = element_text(hjust=0.5))
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
ggplot() +
geom_density(aes(x = BAH$pitstop_duration), fill="#ec8ccd", color="#ec8ccd") +
labs(x = "Pitstop Duration", y = "Density", title = "Density Plot of Pitstop Duration at Bahrain GP 2023") +
theme(plot.title = element_text(hjust=0.5))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.2, .4,  .6, .8),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".2", ".4", ".6", ".8"))
# # This next method reduces the independence between team and pitstop_duration, but will not be compatible with different BAHs - labelling needed, easier to interpret with quantiles
# # Alternatively try to make bins with equal number of observations
# BAH$pitstop_duration <- cut_number(BAH$pitstop_duration, 10, ordered = TRUE)
# # The following does not work because creating equal width intervals causes some bins to have no observations
# BAH$pitstop_duration <- cut_interval(as.numeric(BAH$pitstop_duration), 10, ordered = TRUE)
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.05, .1, .15, .2, .25, .3,.4,.5,.6, .7,.8, .85, .87, .9, .92, .94, .96, .98),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE
# without the labels yet
# , labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98")
)
# Pitstop duration bin and fill NAs with a [0,1] bin
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
BAH$tyre <- factor(BAH$tyre)
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# check which rows have NAs and why
which(is.na(BAH))
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))
View(BAH)
# Extract xmin and xmax from the bin names
laptimes_plotting <- BAH$lap_time %>%
mutate(
xmin = as.numeric(sub("\\[(\\d+),.*", "\\1", bin)),   # Extract xmin
xmax = as.numeric(sub(".*,\\s*(\\d+)\\)", "\\1", bin)) # Extract xmax
)
count(BAH$lap_time)
data <- BAH %>%
count(lap_time) %>%
mutate(
xmin = as.numeric(sub("\\[(\\d+),.*", "\\1", lap_time)),   # Extract xmin
xmax = as.numeric(sub(".*,\\s*(\\d+)\\)", "\\1", lap_time)) # Extract xmax
)
# Plot the data with geom_rect
ggplot(BAH) +
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = n), fill = "steelblue", color = "black") +
labs(x = "Bins", y = "Count", title = "Bar Plot with Variable Bin Widths") +
theme_minimal()
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
ggplot() +
geom_density(aes(x = BAH$pitstop_duration), fill="#ec8ccd", color="#ec8ccd") +
labs(x = "Pitstop Duration", y = "Density", title = "Density Plot of Pitstop Duration at Bahrain GP 2023") +
theme(plot.title = element_text(hjust=0.5))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.2, .4,  .6, .8),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".2", ".4", ".6", ".8"))
# # This next method reduces the independence between team and pitstop_duration, but will not be compatible with different BAHs - labelling needed, easier to interpret with quantiles
# # Alternatively try to make bins with equal number of observations
# BAH$pitstop_duration <- cut_number(BAH$pitstop_duration, 10, ordered = TRUE)
# # The following does not work because creating equal width intervals causes some bins to have no observations
# BAH$pitstop_duration <- cut_interval(as.numeric(BAH$pitstop_duration), 10, ordered = TRUE)
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.2, .4,  .6, .8),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".2", ".4", ".6", ".8"))
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.05, .1, .15, .2, .25, .3,.4,.5,.6, .7,.8, .85, .9, .95, .98),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE
# without the labels yet
# , labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98")
)
# Pitstop duration bin and fill NAs with a [0,1] bin
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
BAH$tyre <- factor(BAH$tyre)
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# check which rows have NAs and why
which(is.na(BAH))
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
ggplot() + geom_bar(aes(x = BAH$lap_time)) + theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot() + geom_bar(aes(x = BAH$lap_time))
+ labs(x = "Lap Time Bins", y = "Count", title = "Lap Time Binning Results for Bahrain GP 2023") +
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_bar(aes(x = BAH$lap_time))
+ labs(x = "Lap Time Bins", y = "Count", title = "Lap Time Binning for Bahrain GP 2023") +
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_bar(aes(x = BAH$lap_time))
+ labs(x = "Lap Time Bins", y = "Count")+
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_bar(aes(x = BAH$lap_time))
+ labs(x = "Lap Time Bins", y = "Count")
ggplot() + geom_bar(aes(x = BAH$lap_time))+
labs(x = "Lap Time Bins", y = "Count")
+
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_bar(aes(x = BAH$lap_time))+
labs(x = "Lap Time Bins", y = "Count")+
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_bar(aes(x = BAH$lap_time))+
labs(x = "Lap Time Intervals", y = "Count", title="Lp Time Binning Results for Bahrain GP 2023")+
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_bar(aes(x = BAH$lap_time))+
labs(x = "Lap Time Intervals", y = "Count", title="Lap Time Binning Results for Bahrain GP 2023")+
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
min(BAH$lap_time, na.rm = TRUE)
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
ggplot() +
geom_density(aes(x = BAH$pitstop_duration), fill="#ec8ccd", color="#ec8ccd") +
labs(x = "Pitstop Duration", y = "Density", title = "Density Plot of Pitstop Duration at Bahrain GP 2023") +
theme(plot.title = element_text(hjust=0.5))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.2, .4,  .6, .8),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".2", ".4", ".6", ".8"))
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.02,.05, .1, .15, .2, .3, .3,.4,.5,.6, .7,.8, .85, .9, .95, .98),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE
# without the labels yet
# , labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98")
)
BAH$driver <- factor(BAH$driver)
BAH$team <- factor(BAH$team)
# Circuit characteristics
BAH$traction <- factor(BAH$traction, ordered = TRUE)
BAH$asphalt_grip <- factor(BAH$asphalt_grip, ordered = TRUE)
BAH$asphalt_abrasion <- factor(BAH$asphalt_abrasion, ordered = TRUE)
BAH$track_evol <- factor(BAH$track_evol, ordered = TRUE)
BAH$tyre_stress <- factor(BAH$tyre_stress, ordered = TRUE)
BAH$braking <- factor(BAH$braking, ordered = TRUE)
BAH$lateral <- factor(BAH$lateral, ordered = TRUE)
BAH$downforce <- factor(BAH$downforce, ordered = TRUE)
# Lap time - ordered: the shorter the better
# the fastest lap is included thanks to argument include.lowest = TRUE
BAH$lap_time <- cut(BAH$lap_time, breaks = c(min(BAH$lap_time, na.rm = TRUE), quantile(BAH$lap_time,probs = c(.02, .05, .1, .15, .2, .3,.4,.5,.6, .7,.8, .85, .9, .95, .98),na.rm=TRUE),max(BAH$lap_time, na.rm = TRUE)), include.lowest = TRUE, ordered_result = TRUE
# without the labels yet
# , labels = c("fastest", ".05", ".1", ".15", ".2", ".25", ".3",".4",".5",".6", ".7",".8", ".85", ".87", ".9", ".92", ".94", ".96", ".98")
)
# Pitstop duration bin and fill NAs with a [0,1] bin
levels(BAH$pitstop_duration) <- c("[0,1]", levels(BAH$pitstop_duration))
BAH <- BAH %>% replace_na(list(pitstop_duration = "[0,1]")) #change to "NA"
BAH$tyre <- factor(BAH$tyre)
BAH$rainfall <- factor(BAH$rainfall, ordered = TRUE)
# Make a variable for position on previous lap
BAH <- BAH %>%
mutate(previous_position = ifelse(lap_number == 1, start_position, shift(BAH$position, n=1, type="lag")))
# Positions are ordered
BAH$previous_position <- factor(BAH$previous_position, ordered = TRUE)
BAH$position <- factor(BAH$position, ordered = TRUE)
# Choosing relevant variables
BAH <- BAH %>%  dplyr::select(c(lap_time,
tyre, team, position,
previous_position, pitstop_duration,
# traction, asphalt_grip, asphalt_abrasion,
# track_evol, tyre_stress, braking,
# lateral, downforce
)) #  rainfall, driver
# check which rows have NAs and why
which(is.na(BAH))
# dropping  nas
BAH <- drop_na(BAH)
BAHapest <- BAH
ggplot() + geom_bar(aes(x = BAH$lap_time))+
labs(x = "Lap Time Intervals", y = "Count", title="Lap Time Binning Results for Bahrain GP 2023")+
theme(axis.text.x = element_text(angle = 45, hjust=1), plot.title = element_text(hjust=0.5))
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
BAH$driver <- factor(BAH$driver)
#Reload the unprocessed dataset
BAH = data.frame(read.csv("data/bahrain2023.csv", header =TRUE))
ggplot() +
geom_density(aes(x = BAH$pitstop_duration), fill="#ec8ccd", color="#ec8ccd") +
labs(x = "Pitstop Duration", y = "Density", title = "Density Plot of Pitstop Duration at Bahrain GP 2023") +
theme(plot.title = element_text(hjust=0.5))
# Convert pitstop_duration to numeric
BAH$pitstop_duration <- as.numeric(BAH$pitstop_duration)
# Make bins
BAH$pitstop_duration <- cut(BAH$pitstop_duration, breaks = c(min(BAH$pitstop_duration, na.rm = TRUE), quantile(BAH$pitstop_duration, probs = c(.2, .4,  .6, .8),na.rm=TRUE),max(BAH$pitstop_duration, na.rm = TRUE)), ordered_result = TRUE, include.lowest = TRUE, labels = c("fastest_pit", ".2", ".4", ".6", ".8"))
ggplot(data=subset(BAH, !is.na(pitstop_duration)), aes(x=pitstop_duration)) +
geom_bar()
ggplot() + geom_point(aes(x = BAH$pitstop_duration, y = BAH$lap_time))
